difference between HTTP/1.1 and HTTP/ 2;

HTTP/1.1

Ithe usest works on the textual format.	
It works on the binary protocol.
There is head of line blocking that blocks all the requests behind it until it doesn’t get its all resources.
It uses requests resource Inlining for use getting multiple pages	
 It compresses data by itself.	

	
HTTP/ 2

It works on the binary protocol
It allows multiplexing so one TCP connection is required for multiple requests.
It uses PUSH frame by server that collects all multiple pages 
It uses HPACK for data compression.

OBJECT AND IT,S PROPERTIES

Objects, in JavaScript, is it’s most important data-type and forms the building blocks for modern JavaScript. These objects are quite different from JavaScript’s primitive data-types(Number, String, Boolean, null, undefined and symbol) in the sense that while these primitive data-types all store a single value each depending on their types.

Objects are more complex and each object may contain any combination of these primitive data-types as well as reference data-types.
An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value. That reference or pointer points to the location in memory where the object is stored. The variables don’t actually store the value.

 objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs. These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.

For Eg. If your object is a student, it will have properties like name, age, address, id, etc
 
A JavaScript object has properties associated with it. A property of an object can be explained as a variable that is attached to the object. Object properties are basically the same as ordinary JavaScript variables, except for the attachment to objects. The properties of an object define the characteristics of the object. Access the properties of an object with a simple dot-notation:

objectName.propertyName

example;
var person={
"name":"manojkumar",
"age":30,
"dob":"1992",
"nationality":"indian",
"state":"tamilnadu",
"blood group":"o-"
};
for(var a in person){
console.log(a,person[a]);
}
console.log(person.age)
console.log(person.state)

in ths exmple we have object about person details,it has lots of key;value pairs.
if we need person details like age ,name whatever  specific details takes from this person details using object properties like dot-notation.using dot-notation property in object it will helps adding some new property in object same thing will happen in delet one key,value pair in object of using dot-notation.